{"version":3,"sources":["components/Header/Header.jsx","api/helpers.jsx","api/photos.jsx","components/Photos/Photos.jsx","api/comments.jsx","components/Modal/Modal.jsx","components/Footer/Footer.jsx","App.jsx","index.js"],"names":["Header","className","request","url","options","a","fetch","response","Error","status","statusText","json","result","getPhotos","photos","getBigPhoto","id","photo","Photos","setIsModalActive","setImgId","useState","setPhotos","useEffect","then","map","src","alt","onClick","image_id","getComments","comments","updateComments","name","description","data","method","headers","body","JSON","stringify","Modal","isModalActive","imgId","bigPhoto","setBigPhoto","setComments","userName","setUserName","newComment","setNewComment","comment","handleChange","event","target","value","onSubmit","preventDefault","htmlFor","type","placeholder","onChange","Footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a71c7e42.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\n\nexport const Header = () => (\n  <header className=\"header\">\n    <h1 className=\"header__title\">\n      Test App\n    </h1>\n  </header>\n);\n","const BASE_URL = 'https://tzfrontend.herokuapp.com';\n\nexport const request = async(url, options) => {\n  const response = await fetch(`${BASE_URL}${url}`, options);\n\n  if (!response) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  const result = await response.json();\n\n  return result;\n};\n\nexport const post = (url, data) => request(url, {\n  method: 'POST',\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n  body: JSON.stringify(data),\n});\n","import { request } from './helpers';\n\nexport const getPhotos = async() => {\n  const photos = await request('/images/');\n\n  return photos;\n};\n\nexport const getBigPhoto = async(id) => {\n  const photo = await request(`/images/${id}/`);\n\n  return photo;\n};\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getPhotos } from '../../api/photos';\nimport './Photos.scss';\n\nexport const Photos = ({ setIsModalActive, setImgId }) => {\n  const [photos, setPhotos] = useState(null);\n\n  useEffect(() => {\n    getPhotos()\n      .then((photo) => {\n        setPhotos(photo);\n      });\n  }, [setPhotos]);\n\n  const getImgInfo = (id) => {\n    setIsModalActive(true);\n    setImgId(id);\n  };\n\n  return (\n    <section className=\"photos\">\n      <div className=\"photos__container\">\n        {!photos && (\n          <div className=\"photos__error\">\n            Loading... Please wait or try to reload.\n          </div>\n        )}\n\n        {photos && (\n          <div className=\"photos__grid\">\n            {photos.map(photo => (\n              <div key={photo.image_id} className=\"photo__card\">\n                <img\n                  className=\"photos__photo\"\n                  src={photo.src}\n                  alt=\"nature\"\n                  onClick={() => getImgInfo(photo.image_id)}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nPhotos.propTypes = {\n  setIsModalActive: PropTypes.func.isRequired,\n  setImgId: PropTypes.func.isRequired,\n};\n","/* eslint-disable camelcase */\nimport { request, post } from './helpers';\n\nexport const getComments = async(id) => {\n  const comments = await request(`/comments/${id}/`);\n\n  return comments;\n};\n\nexport const updateComments = async(name, description, image_id) => post(\n  '/comments/add/', {\n    name,\n    description,\n    image_id,\n  },\n);\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport './Modal.scss';\nimport { getBigPhoto } from '../../api/photos';\nimport { getComments, updateComments } from '../../api/comments';\n\nexport const Modal = ({ isModalActive, setIsModalActive, imgId }) => {\n  const [bigPhoto, setBigPhoto] = useState('');\n  const [comments, setComments] = useState([]);\n  const [userName, setUserName] = useState('');\n  const [newComment, setNewComment] = useState('');\n\n  useEffect(() => {\n    if (!imgId) {\n      return;\n    }\n\n    getBigPhoto(imgId)\n      .then((photo) => {\n        setBigPhoto(photo);\n      });\n\n    getComments(imgId)\n      .then((comment) => {\n        setComments(comment);\n      });\n  }, [imgId, setBigPhoto]);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'name') {\n      setUserName(value);\n    } else if (name === 'comment') {\n      setNewComment(value);\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    updateComments(userName, newComment, imgId);\n    setComments([...comments, {\n      name: userName,\n      description: newComment,\n      image_id: imgId,\n    }]);\n    setUserName('');\n    setNewComment('');\n  };\n\n  const handleClose = () => {\n    setIsModalActive(!isModalActive);\n  };\n\n  return (\n    <>\n      {isModalActive && (\n        <div className=\"modal\">\n          <div className=\"modal__container\">\n            <div className=\"modal__info\">\n              <img\n                className=\"modal__photo\"\n                src={bigPhoto.src}\n                alt=\"nature\"\n              />\n              <form className=\"modal__form\" onSubmit={handleSubmit}>\n                <label htmlFor=\"name\">\n                  <input\n                    className=\"modal__input\"\n                    type=\"text\"\n                    id=\"name\"\n                    name=\"name\"\n                    value={userName}\n                    placeholder=\"Ваше имя\"\n                    onChange={handleChange}\n                  />\n                </label>\n                <label htmlFor=\"comment\">\n                  <input\n                    className=\"modal__input\"\n                    type=\"text\"\n                    id=\"comment\"\n                    name=\"comment\"\n                    value={newComment}\n                    placeholder=\"Ваш комметарий\"\n                    onChange={handleChange}\n                  />\n                </label>\n                <button className=\"modal__button\" type=\"submit\">\n                  Оставить комментарий\n                </button>\n              </form>\n            </div>\n\n            {comments && (\n              <div className=\"modal__comments\">\n                {comments.map(comment => (\n                  <div key={comment.id} className=\"modal__comment\">\n                    <p className=\"modal__name\">\n                      {comment.name}\n                    </p>\n                    <p className=\"modal__text\">\n                      {comment.description}\n                    </p>\n                  </div>\n                ))}\n              </div>\n            )}\n\n            <button\n              className=\"modal__close\"\n              type=\"button\"\n              onClick={handleClose}\n            >\n              <div className=\"modal__line-right\" />\n              <div className=\"modal__line-left\" />\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nModal.propTypes = {\n  isModalActive: PropTypes.bool.isRequired,\n  setIsModalActive: PropTypes.func.isRequired,\n  imgId: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './Footer.scss';\n\nexport const Footer = () => (\n  <footer className=\"footer\">\n    &copy; 2018 - 2019\n  </footer>\n);\n","import React, { useState } from 'react';\nimport { Header } from './components/Header';\nimport { Photos } from './components/Photos';\nimport { Modal } from './components/Modal';\nimport { Footer } from './components/Footer';\nimport './App.scss';\n\nexport const App = () => {\n  const [isModalActive, setIsModalActive] = useState(false);\n  const [imgId, setImgId] = useState(null);\n\n  return (\n    <div className=\"content\">\n      <div className=\"content__container\">\n        <Header />\n        <Photos\n          setIsModalActive={setIsModalActive}\n          setImgId={setImgId}\n        />\n        <Modal\n          isModalActive={isModalActive}\n          imgId={imgId}\n          setIsModalActive={setIsModalActive}\n        />\n        <Footer />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}